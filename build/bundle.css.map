{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import { fade } from \"svelte/transition\";\nimport Info from \"./Info.svelte\";\nimport { cleanText, copyText } from \"./utils.svelte\";\nlet info = false;\nlet diacsCheck = true;\nlet extrasCheck = false;\nlet origTextInput = \"\";\nlet cleanTextField;\n$: cleanTextOutput = cleanText(origTextInput, diacsCheck, extrasCheck);\n</script>\n\n<style>\n  main {\n    max-width: 72ch;\n    padding: 2ch;\n    margin: auto;\n    font-family: \"Noto Serif\", serif;\n  }\n  button {\n    margin-bottom: 1em;\n  }\n  code {\n    font-size: 140%;\n    color: #e83e8c;\n    margin-right: 1em;\n  }\n  h1 {\n    margin-top: 0;\n  }\n  textarea {\n    width: 100%;\n  }\n  .checkboxLabel {\n    display: inline-block;\n    margin-right: 1em;\n  }\n  .count {\n    margin-bottom: 0.4em;\n  }\n  .textareaLabel {\n    margin-bottom: 0.4em;\n  }\n  #checkboxes {\n    display: flex;\n    flex-flow: row wrap;\n    margin-bottom: 0.6em;\n  }\n  #counts {\n    display: flex;\n    flex-flow: row wrap;\n  }\n  #infoButton {\n    display: flex;\n    justify-content: flex-end;\n    font-size: 80%;\n  }\n</style>\n\n<svelte:head>\n\n  <meta\n    name=\"description\"\n    content=\"Clean text to prepare for pasting into a document.\" />\n\n  <link\n    href=\"https://fonts.googleapis.com/css2?family=Noto+Serif:ital@0;1&display=swap\"\n    rel=\"stylesheet\" />\n\n  <link href=\"#\" rel=\"icon\" />\n\n  <title>Clean text for pasting</title>\n\n</svelte:head>\n\n<main>\n\n  <div id=\"infoButton\">\n    <button on:click={() => (info = !info)}>\n      {#if !info}Show info{:else}Return to utility{/if}\n    </button>\n  </div>\n\n  <h1>Clean text for pasting</h1>\n\n  {#if !info}\n    <div in:fade>\n\n      <div id=\"checkboxes\">\n        <div>\n          <input type=\"checkbox\" id=\"diacsCheck\" bind:checked={diacsCheck} />\n          <label for=\"diacsCheck\" class=\"checkboxLabel\">Fix ṡ, ż</label>\n        </div>\n\n        <div>\n          <input type=\"checkbox\" id=\"extrasCheck\" bind:checked={extrasCheck} />\n          <label for=\"extrasCheck\" class=\"checkboxLabel\">Extras</label>\n        </div>\n      </div>\n\n      <div>\n        <label for=\"origTextInput\" class=\"textareaLabel\">Input:</label>\n        <textarea bind:value={origTextInput} id=\"origTextInput\" rows=\"4\" />\n      </div>\n\n      <div>\n        <button on:click={() => (origTextInput = '')}>Clear</button>\n      </div>\n\n      <div id=\"output\">\n        <label for=\"cleanTextOutput\" class=\"textareaLabel\">Output:</label>\n        <textarea\n          bind:this={cleanTextField}\n          bind:value={cleanTextOutput}\n          readonly\n          autocomplete=\"off\"\n          id=\"cleanTextOutput\"\n          rows=\"4\" />\n      </div>\n\n      <div>\n        <button on:click={() => copyText(cleanTextOutput, cleanTextField)}>\n          Copy\n        </button>\n      </div>\n\n      <div id=\"counts\">\n        <div class=\"count\">\n          Characters:\n          <code>{String(cleanTextOutput.length)}</code>\n        </div>\n\n        <div class=\"count\">\n          Words:\n          <code>\n            {cleanTextOutput.length === 0 ? '0' : String(cleanTextOutput\n                    .replace(/\\s{2,}/gm, ' ')\n                    .split(/\\s/gm).length)}\n          </code>\n        </div>\n\n        <div class=\"count\">\n          Paragraphs:\n          <code>\n            {cleanTextOutput.length === 0 ? '0' : String(cleanTextOutput.split('\\n\\n').length)}\n          </code>\n        </div>\n      </div>\n\n    </div>\n  {:else}\n    <Info />\n  {/if}\n\n</main>\n"
  ],
  "names": [],
  "mappings": "AAYE,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,YAAY,CAAC,CAAC,KAAK,AAClC,CAAC,AACD,MAAM,eAAC,CAAC,AACN,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,CACd,YAAY,CAAE,GAAG,AACnB,CAAC,AACD,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,CAAC,AACf,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,IAAI,AACb,CAAC,AACD,cAAc,eAAC,CAAC,AACd,OAAO,CAAE,YAAY,CACrB,YAAY,CAAE,GAAG,AACnB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,aAAa,CAAE,KAAK,AACtB,CAAC,AACD,cAAc,eAAC,CAAC,AACd,aAAa,CAAE,KAAK,AACtB,CAAC,AACD,WAAW,eAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CAAC,IAAI,CACnB,aAAa,CAAE,KAAK,AACtB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CAAC,IAAI,AACrB,CAAC,AACD,WAAW,eAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,QAAQ,CACzB,SAAS,CAAE,GAAG,AAChB,CAAC"
}